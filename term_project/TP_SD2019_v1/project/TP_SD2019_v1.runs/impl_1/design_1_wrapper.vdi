#-----------------------------------------------------------
# Vivado v2017.4 (64-bit)
# SW Build 2086221 on Fri Dec 15 20:55:39 MST 2017
# IP Build 2085800 on Fri Dec 15 22:25:07 MST 2017
# Start of session at: Fri Nov  8 18:00:58 2019
# Process ID: 7436
# Current directory: C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1
# Command line: vivado.exe -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper.vdi
# Journal file: C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1\vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
Command: open_checkpoint C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.031 . Memory (MB): peak = 227.621 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 5616 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2017.4
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/.Xil/Vivado-7436-user-PC/dcp1/design_1_wrapper_board.xdc]
Finished Parsing XDC File [C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/.Xil/Vivado-7436-user-PC/dcp1/design_1_wrapper_board.xdc]
Parsing XDC File [C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/.Xil/Vivado-7436-user-PC/dcp1/design_1_wrapper_early.xdc]
Finished Parsing XDC File [C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/.Xil/Vivado-7436-user-PC/dcp1/design_1_wrapper_early.xdc]
Parsing XDC File [C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/.Xil/Vivado-7436-user-PC/dcp1/design_1_wrapper_late.xdc]
INFO: [Timing 38-35] Done setting XDC timing constraints. [C:/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl:2]
all_registers: Time (s): cpu = 00:00:16 ; elapsed = 00:00:14 . Memory (MB): peak = 1382.387 ; gain = 597.559
Finished Parsing XDC File [C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/.Xil/Vivado-7436-user-PC/dcp1/design_1_wrapper_late.xdc]
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF File: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.272 . Memory (MB): peak = 1382.668 ; gain = 0.000
Restored from archive | CPU: 0.000000 secs | Memory: 0.000000 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.272 . Memory (MB): peak = 1382.668 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 4101 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 4096 instances
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 4 instances
  RAM32X1D => RAM32X1D (RAMD32, RAMD32): 1 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221
open_checkpoint: Time (s): cpu = 00:00:35 ; elapsed = 00:00:35 . Memory (MB): peak = 1382.668 ; gain = 1155.047
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.883 . Memory (MB): peak = 1386.641 ; gain = 3.973

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 3 inverter(s) to 19 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 13ee3577e

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 1386.641 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 31 cells and removed 111 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 10 inverter(s) to 40 load pin(s).
Phase 2 Constant propagation | Checksum: 16db7eda1

Time (s): cpu = 00:00:07 ; elapsed = 00:00:05 . Memory (MB): peak = 1386.641 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 322 cells and removed 950 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 1d6acc9dd

Time (s): cpu = 00:00:09 ; elapsed = 00:00:07 . Memory (MB): peak = 1386.641 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 826 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 1d6acc9dd

Time (s): cpu = 00:00:11 ; elapsed = 00:00:09 . Memory (MB): peak = 1386.641 ; gain = 0.000
INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 1d6acc9dd

Time (s): cpu = 00:00:11 ; elapsed = 00:00:10 . Memory (MB): peak = 1386.641 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.119 . Memory (MB): peak = 1386.641 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 192456816

Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1386.641 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-7.383 | TNS=-1143.139 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 261 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 261 newly gated: 0 Total Ports: 522
Ending PowerOpt Patch Enables Task | Checksum: e6f04a6f

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.900 . Memory (MB): peak = 2347.602 ; gain = 0.000
Ending Power Optimization Task | Checksum: e6f04a6f

Time (s): cpu = 00:01:22 ; elapsed = 00:00:54 . Memory (MB): peak = 2347.602 ; gain = 960.961
INFO: [Common 17-83] Releasing license: Implementation
28 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:38 ; elapsed = 00:01:07 . Memory (MB): peak = 2347.602 ; gain = 964.934
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.102 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:09 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/user/Desktop/jh/NLR_final/NLR_128_1/ip_128_1'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2017.4/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
INFO: [Chipscope 16-241] No debug cores found in the current design.
Before running the implement_debug_core command, either use the Set Up Debug wizard (GUI mode)
or use the create_debug_core and connect_debug_core Tcl commands to insert debug cores into the design.
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.139 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: e1a96aff

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.151 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.125 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 2c6acb87

Time (s): cpu = 00:00:22 ; elapsed = 00:00:21 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 764e842c

Time (s): cpu = 00:00:38 ; elapsed = 00:00:32 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 764e842c

Time (s): cpu = 00:00:38 ; elapsed = 00:00:32 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 1 Placer Initialization | Checksum: 764e842c

Time (s): cpu = 00:00:38 ; elapsed = 00:00:32 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 2 Global Placement
Phase 2 Global Placement | Checksum: f284c324

Time (s): cpu = 00:01:51 ; elapsed = 00:01:20 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: f284c324

Time (s): cpu = 00:01:52 ; elapsed = 00:01:20 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 133e03ff4

Time (s): cpu = 00:02:15 ; elapsed = 00:01:36 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 192e36a27

Time (s): cpu = 00:02:15 ; elapsed = 00:01:37 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 1af6f25a7

Time (s): cpu = 00:02:15 ; elapsed = 00:01:37 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.5 Timing Path Optimizer
Phase 3.5 Timing Path Optimizer | Checksum: 1af6f25a7

Time (s): cpu = 00:02:16 ; elapsed = 00:01:37 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.6 Fast Optimization
Phase 3.6 Fast Optimization | Checksum: fdf1bd32

Time (s): cpu = 00:02:17 ; elapsed = 00:01:39 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.7 Small Shape Detail Placement
Phase 3.7 Small Shape Detail Placement | Checksum: 164a709c4

Time (s): cpu = 00:02:29 ; elapsed = 00:01:50 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.8 Re-assign LUT pins
Phase 3.8 Re-assign LUT pins | Checksum: dc4f0181

Time (s): cpu = 00:02:31 ; elapsed = 00:01:52 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.9 Pipeline Register Optimization
Phase 3.9 Pipeline Register Optimization | Checksum: 10622ffb5

Time (s): cpu = 00:02:31 ; elapsed = 00:01:52 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3.10 Fast Optimization
Phase 3.10 Fast Optimization | Checksum: 1160aab75

Time (s): cpu = 00:02:45 ; elapsed = 00:02:02 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 3 Detail Placement | Checksum: 1160aab75

Time (s): cpu = 00:02:45 ; elapsed = 00:02:02 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 22a7890c2

Phase 4.1.1.1 BUFG Insertion
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Place 46-33] Processed net design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/ap_rst_n_inv, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-31] BUFG insertion identified 1 candidate nets, 0 success, 1 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason.
Phase 4.1.1.1 BUFG Insertion | Checksum: 22a7890c2

Time (s): cpu = 00:03:08 ; elapsed = 00:02:17 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Place 30-746] Post Placement Timing Summary WNS=-3.252. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: f417c13e

Time (s): cpu = 00:03:44 ; elapsed = 00:02:42 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 4.1 Post Commit Optimization | Checksum: f417c13e

Time (s): cpu = 00:03:44 ; elapsed = 00:02:42 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: f417c13e

Time (s): cpu = 00:03:45 ; elapsed = 00:02:43 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: f417c13e

Time (s): cpu = 00:03:45 ; elapsed = 00:02:43 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 4.4 Final Placement Cleanup
Phase 4.4 Final Placement Cleanup | Checksum: 11f7b74ed

Time (s): cpu = 00:03:45 ; elapsed = 00:02:43 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 11f7b74ed

Time (s): cpu = 00:03:46 ; elapsed = 00:02:43 . Memory (MB): peak = 2347.602 ; gain = 0.000
Ending Placer Task | Checksum: fcf7ccab

Time (s): cpu = 00:03:46 ; elapsed = 00:02:43 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
53 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:03:51 ; elapsed = 00:02:47 . Memory (MB): peak = 2347.602 ; gain = 0.000
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:11 ; elapsed = 00:00:04 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:19 ; elapsed = 00:00:09 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.061 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
report_utilization: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.326 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.103 . Memory (MB): peak = 2347.602 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 1c0f015d ConstDB: 0 ShapeSum: e0e8cb4e RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 1087c271d

Time (s): cpu = 00:00:35 ; elapsed = 00:00:25 . Memory (MB): peak = 2347.602 ; gain = 0.000
Post Restoration Checksum: NetGraph: 40b848ac NumContArr: c7c3de71 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 1087c271d

Time (s): cpu = 00:00:36 ; elapsed = 00:00:26 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 1087c271d

Time (s): cpu = 00:00:36 ; elapsed = 00:00:26 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 1087c271d

Time (s): cpu = 00:00:36 ; elapsed = 00:00:26 . Memory (MB): peak = 2347.602 ; gain = 0.000
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 198d6a8e0

Time (s): cpu = 00:01:03 ; elapsed = 00:00:42 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-2.775 | TNS=-357.010| WHS=-0.223 | THS=-144.756|

Phase 2 Router Initialization | Checksum: 1844cad8c

Time (s): cpu = 00:01:12 ; elapsed = 00:00:48 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 13fa443fd

Time (s): cpu = 00:01:53 ; elapsed = 00:01:09 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 5070
 Number of Nodes with overlaps = 464
 Number of Nodes with overlaps = 163
 Number of Nodes with overlaps = 42
 Number of Nodes with overlaps = 17
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 7
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-3.610 | TNS=-585.631| WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1049fee2c

Time (s): cpu = 00:03:14 ; elapsed = 00:01:57 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 336
 Number of Nodes with overlaps = 122
 Number of Nodes with overlaps = 20
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-3.656 | TNS=-595.428| WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 88187542

Time (s): cpu = 00:03:26 ; elapsed = 00:02:06 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 4 Rip-up And Reroute | Checksum: 88187542

Time (s): cpu = 00:03:26 ; elapsed = 00:02:06 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: d221b36b

Time (s): cpu = 00:03:30 ; elapsed = 00:02:08 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-3.597 | TNS=-582.827| WHS=N/A    | THS=N/A    |

 Number of Nodes with overlaps = 0
Phase 5.1 Delay CleanUp | Checksum: 1f84d47c6

Time (s): cpu = 00:03:37 ; elapsed = 00:02:13 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1f84d47c6

Time (s): cpu = 00:03:38 ; elapsed = 00:02:13 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 5 Delay and Skew Optimization | Checksum: 1f84d47c6

Time (s): cpu = 00:03:38 ; elapsed = 00:02:13 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1eded0c35

Time (s): cpu = 00:03:42 ; elapsed = 00:02:15 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-3.575 | TNS=-579.782| WHS=0.011  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 17fcdd624

Time (s): cpu = 00:03:42 ; elapsed = 00:02:16 . Memory (MB): peak = 2347.602 ; gain = 0.000
Phase 6 Post Hold Fix | Checksum: 17fcdd624

Time (s): cpu = 00:03:42 ; elapsed = 00:02:16 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 20.5707 %
  Global Horizontal Routing Utilization  = 25.405 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Utilization threshold used for congestion level computation: 0.85
Congestion Report
North Dir 1x1 Area, Max Cong = 78.3784%, No Congested Regions.
South Dir 1x1 Area, Max Cong = 87.3874%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X60Y112 -> INT_L_X60Y112
   INT_R_X57Y109 -> INT_R_X57Y109
   INT_L_X56Y85 -> INT_L_X56Y85
   INT_L_X58Y74 -> INT_L_X58Y74
East Dir 1x1 Area, Max Cong = 88.2353%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X58Y108 -> INT_L_X58Y108
West Dir 1x1 Area, Max Cong = 88.2353%, Congestion bounded by tiles (Lower Left Tile -> Upper Right Tile):
   INT_L_X42Y58 -> INT_L_X42Y58
   INT_R_X41Y56 -> INT_R_X41Y56
   INT_L_X28Y52 -> INT_L_X28Y52
   INT_L_X40Y48 -> INT_L_X40Y48
   INT_L_X22Y37 -> INT_L_X22Y37
Phase 7 Route finalize | Checksum: 1d9192691

Time (s): cpu = 00:03:43 ; elapsed = 00:02:16 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1d9192691

Time (s): cpu = 00:03:43 ; elapsed = 00:02:16 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 10b1856d3

Time (s): cpu = 00:03:46 ; elapsed = 00:02:19 . Memory (MB): peak = 2347.602 ; gain = 0.000

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=-3.575 | TNS=-579.782| WHS=0.011  | THS=0.000  |

WARNING: [Route 35-328] Router estimated timing not met.
Resolution: For a complete and accurate timing signoff, report_timing_summary must be run after route_design. Alternatively, route_design can be run with the -timing_summary option to enable a complete timing signoff at the end of route_design.
Phase 10 Post Router Timing | Checksum: 10b1856d3

Time (s): cpu = 00:03:46 ; elapsed = 00:02:20 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:03:46 ; elapsed = 00:02:20 . Memory (MB): peak = 2347.602 ; gain = 0.000

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
70 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:03:52 ; elapsed = 00:02:23 . Memory (MB): peak = 2347.602 ; gain = 0.000
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:16 ; elapsed = 00:00:05 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:22 ; elapsed = 00:00:10 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:14 ; elapsed = 00:00:07 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:35 ; elapsed = 00:00:20 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
82 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:24 ; elapsed = 00:00:15 . Memory (MB): peak = 2347.602 ; gain = 0.000
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
CRITICAL WARNING: [Timing 38-282] The design failed to meet the timing requirements. Please see the timing summary report for details on the timing violations.
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-545] No incremental reuse to report, no incremental placement and routing data was found.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
WARNING: [Memdata 28-167] Found XPM memory block design_1_i/axi_dma_2/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to auto. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_dma_2/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/axi_dma_2/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/axi_dma_2>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/axi_dma_1/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/axi_dma_1>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U170/convolution3_NLR_cud_DSP48_1_U/p input design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U170/convolution3_NLR_cud_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_bkb_U136/convolution3_NLR_bkb_DSP48_0_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_bkb_U136/convolution3_NLR_bkb_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U170/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U170/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U171/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U171/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U172/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U172/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U173/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U173/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U174/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U174/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U175/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U175/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U176/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U176/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U177/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U177/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U178/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U178/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U179/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U179/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U180/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U180/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U181/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U181/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U182/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U182/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U183/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U183/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U184/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U184/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U185/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U185/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U186/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U186/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U187/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U187/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U188/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U188/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U189/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U189/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U190/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U190/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U191/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U191/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U192/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U192/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U193/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U193/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U194/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U194/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U195/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U195/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U196/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U196/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U197/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U197/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U198/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U198/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U199/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U199/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U200/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U200/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U201/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U201/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U202/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U202/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U203/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U203/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U204/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U204/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U205/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U205/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U206/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U206/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U207/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U207/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U208/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U208/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U209/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U209/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U210/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U210/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U211/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U211/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U212/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U212/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U213/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U213/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U214/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U214/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U215/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U215/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U216/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U216/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U217/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U217/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U218/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U218/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U219/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U219/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U220/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U220/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U221/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U221/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U222/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U222/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U223/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U223/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U224/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U224/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U225/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U225/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U226/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U226/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U227/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U227/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U228/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U228/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U229/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U229/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U230/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U230/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U231/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U231/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U232/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U232/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U233/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U233/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U234/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U234/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U235/convolution3_NLR_cud_DSP48_1_U/p output design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U235/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
INFO: [Common 17-14] Message 'DRC DPOP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_bkb_U136/convolution3_NLR_bkb_DSP48_0_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_bkb_U136/convolution3_NLR_bkb_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U137/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U138/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U139/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U140/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U141/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U142/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U143/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U144/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U145/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U146/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U147/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U148/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U149/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U150/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U151/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U152/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U153/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U154/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U155/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U156/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U157/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U158/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U159/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U160/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U161/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U162/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U163/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U164/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U165/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U166/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U167/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U168/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U169/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U170/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U170/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U171/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U171/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U172/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U172/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U173/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U173/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U174/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U174/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U175/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U175/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U176/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U176/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U177/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U177/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U178/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U178/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U179/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U179/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U180/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U180/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U181/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U181/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U182/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U182/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U183/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U183/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U184/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U184/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U185/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U185/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U186/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U186/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U187/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U187/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U188/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U188/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U189/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U189/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U190/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U190/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U191/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U191/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U192/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U192/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U193/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U193/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U194/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U194/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U195/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U195/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U196/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U196/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U197/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U197/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U198/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U198/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U199/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U199/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U200/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U200/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U201/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U201/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U202/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U202/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U203/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U203/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U204/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U204/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U205/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U205/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U206/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U206/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U207/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U207/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U208/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U208/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U209/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U209/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U210/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U210/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U211/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U211/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U212/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U212/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U213/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U213/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U214/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U214/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U215/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U215/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U216/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U216/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U217/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U217/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U218/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U218/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U219/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U219/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U220/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U220/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U221/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U221/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U222/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U222/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U223/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U223/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U224/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U224/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U225/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U225/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U226/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U226/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U227/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U227/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U228/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U228/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U229/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U229/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U230/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U230/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U231/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U231/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U232/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U232/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U233/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U233/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U234/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U234/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U235/convolution3_NLR_cud_DSP48_1_U/p multiplier stage design_1_i/convolution3_NLR_0/inst/grp_computation_fu_6834/convolution3_NLR_cud_U235/convolution3_NLR_cud_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC RTSTAT-10] No routable loads: 15 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid, and design_1_i/axi_interconnect_0/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/user_valid.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_1/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_2/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 661 Warnings, 3 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Project 1-821] Please set project.enableDesignId to be 'true'.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-118] WebTalk data collection is enabled (User setting is ON. Install Setting is ON.).
INFO: [Common 17-186] 'C:/Users/user/Desktop/jh/NLR_final/NLR_128_1/project_128_1/project_128_1.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Fri Nov  8 18:09:55 2019. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2017.4/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
109 Infos, 304 Warnings, 1 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:58 ; elapsed = 00:00:41 . Memory (MB): peak = 2556.461 ; gain = 208.859
INFO: [Common 17-206] Exiting Vivado at Fri Nov  8 18:09:56 2019...
